import{_ as o}from"./chunks/SynthPage.DISdFh95.js";import{s as a,d as s,y as i,R as n,S as l,f as r,B as h,b as c}from"./chunks/framework.BMc-2bSs.js";import"./chunks/useClicks.DBr_plfA.js";import"./chunks/index.DISW28_u.js";const u=h("<p>WebSynths is a free resource for any musician with internet access! But, it is made possible by support from our patrons. Please consider helping if you can: patreon.com/WebSynths</p><ul><li>You can use your QWERTY keyboard, mouse, mobile touch or MIDI keyboard to play the sounds.</li><li>You can change the tuning of the keys, or select a scale, by clicking the tuning button.</li><li>MIDI is a way to use an external physical instrument to play it. If you have a MIDI keyboard that you wish to use, hit the MIDI button to set it up.</li><li>If a note gets stuck, hit the panic button, it will stop all voices from playing.</li><li>You can use the arrows on your computer keyboard to scroll through the presets.</li></ul><p>A simple explanation of Subtractive Synthesis:</p><ul><li>Subtractive Synthesis works by taking one or more oscillators, setting the pitch of their oscillation (usually to the note of the key being pressed,) setting the shape of their oscillation to the desired timbre (Sine, Saw, Square or more complex shapes,) mixing them together and running them through a filter to change their EQ (usually filtering out the highest or lowest frequencies... this is why it is called &quot;subtractive&quot;), then running them through an envelope so the note can be heard on when a key is pressed down and is silenced when the key is released. In the case of WebSynths Microtonal, the sound is then sent through effects like delay, chorus and reverb and out to your speakers.</li><li>Oscillators are the voices. This synth has 3 of them in the left column. You can change the character of each voice by changing the parameters of them. The &#39;Shape&#39; menu allows you to choose from different styles of voice for each oscillator. You can turn each voice on or off and mix them together.</li><li>The filter section applies equalization to your oscillators via the cutoff and emphasis controls. You can change the equalization filter type to &#39;low pass / high pass&#39; and many more. You can use the LFOs and/or Envelopes to change how the filtration changes over time. An LFO is just a slow oscillator that is uses to automatically move a parameter over time.</li><li>The amplitude envelope changes how your sound is played, volume-wise, when you hit a note. For example, having a long release time will mean that once you let go of the note you are playing it will tail off until fading out. Having a slow attack will mean that your note will fade in instead of playing at full volume straight away.</li><li>The effects section allows you to add various effects to your overall sound. You can change the effects, mix them together and toggle them on or off too.</li></ul>",4),v=JSON.parse('{"title":"","description":"","frontmatter":{"dynamic":true,"page_type":"synth"},"headers":[],"params":{"url":"https://websynths.com/","date_created":"2023-10-27T12:45:54.019Z","title":"Websynths Microtonal","slug":"microtonal","author":"WebSynths","author_link":"https://www.websynths.com/microtonal/","description":"The deepest internet synthesizer","tags":null,"archive_link":null,"archive":false,"iframe":false,"cover":"ffc54664-7ba4-4855-a56a-6657a5542a04","id":10,"sort":12,"clicks":172,"public":false,"is_new":false,"stats":[11]},"relativePath":"microtonal/index.md","filePath":"microtonal/index.md","lastUpdated":0}'),m={name:"microtonal/index.md"},k=Object.assign(m,{setup(p){const{params:e,frontmatter:f}=a();return(d,y)=>{const t=o;return c(),s("div",null,[i(t,n(l(r(e))),null,16),u])}}});export{v as __pageData,k as default};
